chr            = "chr4",
start          = 1,
end            = 40000,
resolution     = 2000,
genome_package = "BSgenome.Dmelanogaster.UCSC.dm6",
acc_wig        = "C:/Users/hitun/Downloads/package/other/BG3.r2c.dhs.density.wig",
chain_file     = "C:/Users/hitun/Downloads/package/dm3ToDm6.over.chain",
te_granges     = "C:/Users/hitun/Downloads/package/dm6_TEs.gtf"
)
processed <- CSV_process_data(df, N=10, scale_max=500, standardization_y=TRUE)
processed <- CSV_process_data(bb, N=20, scale_max=500, standardization_y=TRUE)
# Extract covariates and interaction matrices
x_vars <- processed$x_vars
y_matrices <- processed$y
N <- 20
gamma_prior <- 0.3
iterations <- 500
theta_start <- 0.5
size_start <- c(1,1,1)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
x_vars = x_vars,
y = y,
theta_start = theta_start,
use_data_priors = TRUE,
user_fixed_priors = FALSE,
epsilon = NULL,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
N <- 20
gamma_prior <- 0.3
iterations <- 500
theta_start <- 0.5
size_start <- c(1,1,1)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
x_vars = x_vars,
y = y_matrices,
theta_start = theta_start,
use_data_priors = TRUE,
user_fixed_priors = FALSE,
epsilon = NULL,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
N <- 20
gamma_prior <- 0.3
iterations <- 500
theta_start <- 0.5
size_start <- c(1,1,1)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
x_vars = x_vars,
y = y_matrices,
theta_start = theta_start,
use_data_priors = TRUE,
epsilon = NULL,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
x_vars = x_vars,
y = y_matrices,
theta_start = theta_start,
use_data_priors = TRUE,
epsilon = NULL,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
warnings()
traceback()
remove.packages("HMRFHiC")
install.packages("C:/Users/hitun/Desktop/Thesis/Writing/HMRFHiC_0.1.0.tar.gz", repos = NULL, type = "source")
library(HMRFHiC)
bb <- get_data(
file_path      = "C:/Users/hitun/Downloads/package/BG3_WT_merged_hic_chr4_2Kb.cool",
chr            = "chr4",
start          = 1,
end            = 40000,
resolution     = 2000,
genome_package = "BSgenome.Dmelanogaster.UCSC.dm6",
acc_wig        = "C:/Users/hitun/Downloads/package/other/BG3.r2c.dhs.density.wig",
chain_file     = "C:/Users/hitun/Downloads/package/dm3ToDm6.over.chain",
te_granges     = "C:/Users/hitun/Downloads/package/dm6_TEs_chr4.gtf.gz"
)
View(bb)
processed <- process_data(bb, N=20, scale_max=500, standardization_y=TRUE)
x_vars <- processed$x_vars
y_matrices <- processed$y
N <- 20
gamma_prior <- 0.3
iterations <- 2000
theta_start <- 0.5
size_start <- c(1,1,1)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
x_vars = x_vars,
y = y_matrices,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
x_vars_arg = x_vars,
y_arg = y_matrices,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
traceback()
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
y_arg = y_matrices,
x_vars_arg = x_vars,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
y = y_matrices,
x_vars_arg = x_vars,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
y <- processed$y
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
y_arg = y,
x_vars_arg = x_vars,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = processed,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = as.dataframe(processed),
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = as.data.frame(processed),
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = bb,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
View(bb)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = as.data.frame(bb),
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
is.data.frame(bb)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = bb,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
traceback()
View(processed)
remove.packages("HMRFHiC")
install.packages("C:/Users/hitun/Desktop/Thesis/Writing/HMRFHiC_0.1.0.tar.gz", repos = NULL, type = "source")
library(HMRFHiC)
bb <- get_data(
file_path      = "C:/Users/hitun/Downloads/package/BG3_WT_merged_hic_chr4_2Kb.cool",
chr            = "chr4",
start          = 1,
end            = 40000,
resolution     = 2000,
genome_package = "BSgenome.Dmelanogaster.UCSC.dm6",
acc_wig        = "C:/Users/hitun/Downloads/package/other/BG3.r2c.dhs.density.wig",
chain_file     = "C:/Users/hitun/Downloads/package/dm3ToDm6.over.chain",
te_granges     = "C:/Users/hitun/Downloads/package/dm6_TEs_chr4.gtf.gz"
)
processed <- process_data(bb, N=20, scale_max=500, standardization_y=TRUE)
x_vars <- processed$x_vars
y <- processed$y
N <- 20
gamma_prior <- 0.3
iterations <- 2000
theta_start <- 0.5
size_start <- c(1,1,1)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = bb,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = as.matrix(bb),
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = bb,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
x_vars_arg = x_vars,
y_arg = y,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
View(results)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = bb,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
traceback()
install.packages("C:/Users/hitun/Downloads/package/HMRFHiC_0.1.0.tar.gz", repos = NULL, type = "source")
library(HMRFHiC)
bb <- get_data(
file_path      = "C:/Users/hitun/Downloads/package/BG3_WT_merged_hic_chr4_2Kb.cool",
chr            = "chr4",
start          = 1,
end            = 40000,
resolution     = 2000,
genome_package = "BSgenome.Dmelanogaster.UCSC.dm6",
acc_wig        = "C:/Users/hitun/Downloads/package/other/BG3.r2c.dhs.density.wig",
chain_file     = "C:/Users/hitun/Downloads/package/dm3ToDm6.over.chain",
te_granges     = "C:/Users/hitun/Downloads/package/dm6_TEs_chr4.gtf.gz"
)
processed <- process_data(bb, N=20, scale_max=500, standardization_y=TRUE)
x_vars <- processed$x_vars
y <- processed$y
N <- 20
gamma_prior <- 0.3
iterations <- 2000
theta_start <- 0.5
size_start <- c(1,1,1)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
mydata = bb,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
y = y,
x_vars = x_vars,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZINB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
y = y,
x_vars = x_vars,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "NB",
size_start = size_start,
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
y = y,
x_vars = x_vars,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "ZIP",
mc_cores = 1
)
results <- run_chain_betas(
N = N,
gamma_prior = gamma_prior,
iterations = iterations,
y = y,
x_vars = x_vars,
theta_start = theta_start,
use_data_priors = TRUE,
distance_metric = "manhattan",
dist = "Poisson",
mc_cores = 1
)
install.packages("C:/Users/hitun/Downloads/package/HMRFHiC_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/hitun/Downloads/package/HMRFHiC_0.1.0.tar.gz", repos = NULL, type = "source")
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install(version = "devel")
install.packages("C:/Users/hitun/Downloads/package/HMRFHiC_0.1.0.tar.gz", repos = NULL, type = "source")
testthat::test_package("HMRFHiC")
testthat::test_check("HMRFHiC")
setwd("C:/Users/hitun/Downloads/HMRFHiC-test")
testthat::test_check("HMRFHiC-test")
testthat::test_check("HMRFHiC")
setwd("C:/Users/hitun/Downloads/package/HMRFHiC")
testthat::test_check("HMRFHiC")
setwd("C:/Users/hitun/Downloads/HMRFHiC-test")
devtools::test("HMRFHiC-test")
devtools::test("HMRFHiC")
devtools::check()
library(devtools)
res <- devtools::check(document   = FALSE,   # speed‑ups (optional)
vignettes  = FALSE,
run_dont_run = FALSE)
library(devtools)
res <- devtools::check(document   = FALSE,   # speed‑ups (optional)
vignettes  = FALSE
)
length(res$warnings)   # how many warnings?
res$warnings           # prints only the warning messages
r tools::showNonASCIIfile("R/run_chain.R")
rtools::showNonASCIIfile("R/run_chain.R")
tools::showNonASCIIfile("R/run_chain.R")
setwd("C:/Users/hitun/Downloads/HMRFHiC-test2")
library(devtools)
res <- devtools::check(document   = FALSE,   # speed‑ups (optional)
vignettes  = FALSE,
run_dont_run = FALSE)
devtools::check()
devtools::check()
devtools::check()
library(devtools)
res <- devtools::check()
length(res$warnings)   # how many warnings?
res$warnings           # prints only the warning messages
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
Rcpp::compileAttributes()   # creates/updates R/RcppExports.R
devtools::document()        # turns roxygen comments into man/*.Rd
devtools::check()           # the WARNINGs should now be gone
# turns roxygen comments into man/*.Rd
devtools::check()           # the WARNINGs should now be gone
Rcpp::compileAttributes()   # creates/updates R/RcppExports.R
devtools::document()        # turns roxygen comments into man/*.Rd
Rcpp::compileAttributes()   # creates/updates R/RcppExports.R
devtools::document()        # turns roxygen comments into man/*.Rd
test_data2 <- read.csv("data/test_data2.csv", stringsAsFactors = FALSE)
usethis::use_data(test_data2, overwrite = TRUE)
test_data2 <- read.csv("data-raw/test_data2.csv", stringsAsFactors = FALSE)
Rcpp::compileAttributes()   # creates/updates R/RcppExports.R
devtools::document()        # turns roxygen comments into man/*.Rd
devtools::check()
Rcpp::compileAttributes()   # creates/updates R/RcppExports.R
devtools::document()        # turns roxygen comments into man/*.Rd
Rcpp::compileAttributes()   # creates/updates R/RcppExports.R
devtools::document()        # turns roxygen comments into man/*.Rd
Rcpp::compileAttributes()   # creates/updates R/RcppExports.R
devtools::document()        # turns roxygen comments into man/*.Rd
devtools::check()
Rcpp::compileAttributes()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
